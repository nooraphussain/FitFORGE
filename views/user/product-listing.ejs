<%- include('../partials/user/header') %>
<style>
  .img-direita {
  width: 400px; 
  height: 450px; 
  overflow: hidden;
  min-height: 450px;
  }

  .img-esquerda {
    object-fit: contain;
    position: relative;
    width: 200px;
    height: 450px;
    overflow: hidden;
  }

  .image-container {
    display: flex;
    flex-direction: column;
    transition: transform 0.3s ease-in-out;
  }

  .product-image {
    width: 100%;
    height: auto; 
    object-fit: contain; 
    margin-bottom: 10px; 
  }

  .arrow-btn {
    position: absolute;
    left: 40%;
    transform: translateX(-50%);
    background: rgba(0, 0, 0, 0.6);
    color: white;
    border: none;
    cursor: pointer;
    padding: 5px;
    font-size: 18px;
    z-index: 10;
    display: none;
  }

  .arrow-up {
    top: 0;
  }

  .arrow-down {
    bottom: 0;
  }

  .div-image {
    width: 405px;
    height: 410px;
    position: absolute;
    top: 238px;
    left: 330px;

  }

  .div-image img {
    border-radius: 10px;
    object-fit: contain;
}

.zoom-box {
    position: absolute;
    top: 220px;
    left: 52%;  
    width: 600px;  
    height: 600px;
    overflow: hidden;
    border: 2px solid #ddd;
    background: white;
    display: none;
    z-index: 1000;
}

.zoom-box img {
    width: 500px; 
    height: 500px;
    position: absolute;
}
  
</style>
<main>
  <nav class="breadcrumb">
      <div class="container">
          <a href="/">Home</a> >
          <a href="/">Shop</a> >
          <span><%= product.productName %></span>
      </div>
  </nav>

      <section>
        <div class="container">
            <div class="container-produto">
                <div class="produto-esquerdo">
                  

                  <div class="img-esquerda" data-tab-produto="imagem-pequena">
                    <button class="arrow-btn arrow-up" id="scrollUp" onclick="scrollImages(-1)">&#9650;</button>
                    <div class="image-container" id="imageContainer" >
                      <% product.productImage.forEach(image => { %>
                        <img src="/uploads/product-images/<%= image %>" 
                             alt="<%= product.productName %>" 
                             class="product-image thumbnail"
                             data-image="/uploads/product-images/<%= image %>">
                    <% }) %>                    
                    </div>
                    <button class="arrow-btn arrow-down" id="scrollDown" onclick="scrollImages(1)">&#9660;</button>
                  </div>
                
                  <div class="img-direita" data-tab-produto="imagem-grande">
                      <img id="mainImage" 
                          src="/uploads/product-images/<%= product.productImage[0] %>" 
                          alt="<%= product.productName %>" 
                          class="product-image">
                  </div>
                
         
                </div>
                <div class="produto-direito">
                    <h1 class="titulo-produto"><%= product.productName %></h1>
                    <p class="f2-m cor-p4"><strong>Brand:</strong> <%= product.brand %></p> 
                    <div class="avaliacao">
                        <img src="/img/Frame 10.svg" alt="" />
                        <span class="f2-m">4.5/5</span> <!-- replace it dynamically -->
                    </div>
                    <div class="precos">
                      <span class="preco-novo" data-sale-price="<%= product.salePrice %>">₹<%= product.salePrice %></span>
                      <span class="preco-ant" data-regular-price="<%= product.regularPrice %>">₹<%= product.regularPrice %></span>
                      <% 
                        // Get both offers as numbers
                        const productOffer = parseFloat(product.offer) || 0;
                        const categoryOffer = parseFloat(product.category?.categoryOffer) || 0;
                        
                        // Store both values as data attributes for JavaScript to use
                        // But don't calculate the final offer here - let JavaScript handle it
                      %>
                      <span class="preco-desc" 
                            data-product-offer="<%= productOffer %>" 
                            data-category-offer="<%= categoryOffer %>">
                        <%= Math.max(productOffer, categoryOffer) %>%
                      </span>
                    </div>
                    <% if(product.quantity === 0) { %>
                        <p style="color: red; font-size: 14px;">Out of stock!</p>
                      <% } else if(product.quantity <= 5) { %>
                        <p style="color: red; font-size: 14px;">Only <%= product.quantity %> left!</p>
                      <% } %>                      
                    <p class="f2-m cor-p4 barra-produto"><%= product.description %></p>
                    <div class="cores-tamanhos">
                        <p class="f2-m cor-p4">Select a color</p>
                        <div class="cores-selecao barra-produto">
                            <button class="roupa-cor1" style="background-color: <%= product.color %>"></button>
                        </div>
                        <!-- <div>
                            <p class="f2-m cor-p4">Choose a size</p>
                            <div class="tamanho-produto barra-produto">
                                <button>Small</button>
                                <button>Medium</button>
                                <button>Large</button>
                                <button>X-large</button>
                            </div>
                        </div> -->
                        <hr class="style-118" />
                        <div class="style-119">
                            <div class="style-120">
                              <!-- minus -->
                              <button class="style-121" type="button">
                                <svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg" class="style-122">
                                  <path d="M432 256c0 17.7-14.3 32-32 32L48 288c-17.7 0-32-14.3-32-32s14.3-32 32-32l352 0c17.7 0 32 14.3 32 32z" class="style-123"></path>
                                </svg>
                              </button>
                              <span class="style-124">1</span>
                              <!-- plus -->
                              <button class="style-125" type="button">
                                <svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg" class="style-126">
                                        <path d="M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32V224H48c-17.7 0-32 14.3-32 32s14.3 32 32 32H192V432c0 17.7 14.3 32 32 32s32-14.3 32-32V288H400c17.7 0 32-14.3 32-32s-14.3-32-32-32H256V80z" class="style-127"></path>
                                </svg>
                              </button>
                            </div>
                            <a class="style-128 add-to-cart" 
                            data-product-id="<%= product._id %>" 
                            data-quantity="<%= product.quantity %>" 
                            data-sale-price="<%= product.salePrice %>"
                            onclick="handleAddToCart(this)">
                            <button type="button" class="style-128 add-to-cart <%= product.quantity === 0 ? 'disabled' : '' %>" 
                                    title="<%= product.quantity === 0 ? 'Out of stock!' : '' %>">
                                Add to Cart
                            </button>
                            </a>
                            <script>
                            function handleAddToCart(anchor) {
                                const productId = anchor.getAttribute("data-product-id");
                                const quantityAvailable = parseInt(anchor.getAttribute("data-quantity"));
                                const salePrice = anchor.getAttribute("data-sale-price");
                                if (quantityAvailable === 0) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: 'Out of stock!'
                                });
                                return;
                                }
                                addToCart(productId, salePrice);
                            }
                            </script>
                            <i class="fa fa-heart wishlist-icon" onclick="AddToWishList(this)" id="wishlistIcon" data-product-id="<%= product._id %>"
                              style="color: <%= wishlist.includes(product._id.toString()) ? 'red' : '#878787' %>; cursor: pointer; margin-left: auto; transition: transform 0.3s ease, color 0.3s ease;">
                           </i>
                           
                           <script>
                             function AddToWishList(elem) {
                               // Get the correct attribute 'data-product-id'
                               var productId = elem.getAttribute('data-product-id');
                               if (!productId) {
                                 console.error("Product ID not found!");
                                 return;
                               }
                               fetch('/addToWishlist', {
                                 method: 'POST',
                                 headers: {
                                   'Content-Type': 'application/json'
                                 },
                                 body: JSON.stringify({ productId: productId })
                               })
                               .then(response => response.json())
                               .then(response => {
                                 if (response.success) {
                                   elem.style.color = 'red';
                                   Swal.fire({
                                     title: 'Added to wishlist',
                                     text: 'The product has been added to your wishlist',
                                     icon: 'success',
                                     timer: 2000
                                   });
                                 } else {
                                   if(response.message === "Product already in wishlist"){
                                     elem.style.color = 'red';
                                     Swal.fire({
                                       title: 'Already in wishlist',
                                       text: response.message,
                                       icon: 'info',
                                       timer: 2000
                                     });
                                   } else {
                                     Swal.fire({
                                       title: 'Error',
                                       text: response.message || 'There was an error while adding the product to your wishlist',
                                       icon: 'error',
                                       timer: 2000
                                     });
                                   }
                                 }
                               })
                               .catch(error => {
                                 console.error("Error adding to wishlist:", error);
                                 Swal.fire({
                                   title: 'Error',
                                   text: 'There was an error while adding the product to your wishlist',
                                   icon: 'error',
                                   timer: 2000
                                 });
                               });
                             }
                           </script>
                           
                        </div>
                    </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- zoom-box -->
    <div class="div-image" id="div-image">
      <img src='/placeholder.svg' alt="" id="img-add">
    </div>
    <div class="zoom-box" id="zoomBox">
        <img src='/placeholder.svg' alt="" id="zoomImage">
    </div>
    
    <div class="style-129">
      <div class="style-130">
          <button class="style-131" type="button">Product Details</button>
          <button class="style-132" type="button">Rating &amp; Reviews</button>
          <button class="style-133" type="button">FAQs</button>
      </div>
      <div class="style-134">
          <section class="style-135">
              <h3 class="style-136">Product specifications</h3>
              <div class="style-134">
                <section class="style-135">
                    <div class="style-137">
                        <div class="style-138">
                            <p class="style-139">Material composition</p>
                        </div>
                        <div class="style-140">
                            <p class="style-141">100% Cotton</p>
                        </div>
                    </div>
                    <hr class="style-hr" />
            
                    <div class="style-142">
                        <div class="style-143">
                            <p class="style-144">Care instructions</p>
                        </div>
                        <div class="style-145" style="z-index: -1;">
                            <p class="style-146" style="margin-top: 35px;">Machine wash warm, tumble dry</p>
                        </div>
                    </div>
                    <hr class="style-hr" style="margin-top: -20px;"/>
            
                    <div class="style-147">
                        <div class="style-148">
                            <p class="style-149">Fit type</p>
                        </div>
                        <div class="style-150">
                            <p class="style-151">Classic Fit</p>
                        </div>
                    </div>
                    <hr class="style-hr" />
            
                    <div class="style-152">
                        <div class="style-153">
                            <p class="style-154">Pattern</p>
                        </div>
                        <div class="style-155">
                            <p class="style-156">Solid</p>
                        </div>
                    </div>        
      </div>
  </div>
    <!-- Slider Container: Fixed width for 6 items (220px each) -->
    <div id="sliderContainer" data-suggestions="<%= suggestions.length %>" style="position: relative; width: 1320px; overflow-x: auto; overflow-y: hidden; margin-left: 0px; margin-right: 50px !important; scroll-behavior: smooth;">
        <!-- Slider Wrapper: Contains all suggestion items, aligned to the left -->
        <div class="slider-wrapper" style="display: flex; justify-content: flex-start; transition: transform 0.4s ease-in-out; flex-direction: row; align-items: stretch; box-sizing: border-box; margin-right: 50px; padding: 0; transform: translateX(0px); min-width: <%= suggestions.length * 220 %>px;">
        <% suggestions.forEach(function(product) { %>
            <div class="suggestion-item" style="width: 220px; display: flex; flex-direction: column; box-sizing: border-box; margin: 0; padding: 0; margin-bottom: 20px;">
            <div class="suggestion-content" style="padding: 16px; position: relative; transition: box-shadow 0.2s ease-in-out; box-sizing: border-box; margin: 0;">
                <a class="suggestion-link" target="_blank" rel="noopener noreferrer" href="/product-listing?productId=<%= product._id %>" style="display: block; margin-bottom: 5px; text-decoration: none; color: rgb(33,33,33); box-sizing: border-box; padding: 0;">
                    <div class="image-wrapper" style="padding-bottom: 16px; user-select: none; transition: opacity 0.3s; opacity: 1; box-sizing: border-box; margin: 0;">
                    <div class="inner-wrapper" style="box-sizing: border-box; margin: 0; padding: 0;">
                    <div class="image-container" style="height: 200px; width: 200px; position: relative; margin: 0 auto; box-sizing: border-box; padding: 0;">
                        <img class="product-image" loading="eager" alt="<%= product.productName %>" src="/uploads/product-images/<%= Array.isArray(product.productImage) ? product.productImage[0] : product.productImage %>" style="position: absolute; inset: 0; margin: auto; opacity: 1; max-width: 200px; height: 200px; border: 0; box-sizing: border-box; padding: 0;" />
                    </div>
                    </div>
                </div>
                </a>
                <div class="product-details" style="box-sizing: border-box; margin: 0; padding: 0;">
                    <div class="product-title" style="box-sizing: border-box; margin: 0; padding: 0; white-space: normal; word-wrap: break-word;">
                        <a class="product-link" title="<%= product.productName %>" target="_blank" rel="noopener noreferrer" href="/product-listing?productId=<%= product._id %>" style="display: block; margin-bottom: 5px; text-decoration: none; color: rgb(33,33,33); box-sizing: border-box; padding: 0;">
                            <%= product.productName %>
                        </a>                                                                          
                    </div>
                    <div class="product-rating" style="display: inline-block; vertical-align: middle; font-size: 0; box-sizing: border-box; margin: 0; padding: 0;">
                        <img src="./img/Frame 10.svg" alt="rating" style="display: inline-block; vertical-align: middle;" />
                        <span class="f2-m">4.5/5</span>
                    </div>
                    <div class="price-info" style="display: block; padding: 0 10px 0 0; margin: 3px 0; box-sizing: border-box;">
                        <div class="sale-price" style="display: inline-block; font-size: 16px; font-weight: 500; color: rgb(33,33,33);">
                          ₹<%= product.salePrice.toFixed(2) %>
                        </div>
                        <div class="regular-price" style="display: inline-block; margin-left: 8px; text-decoration: line-through; font-size: 14px; color: rgb(135,135,135);">
                          ₹<%= product.regularPrice.toFixed(2) %>
                        </div>
                        <div class="discount-info" style="display: inline-block; margin-left: 8px; color: rgb(56,142,60); font-size: 13px; letter-spacing: -0.2px; font-weight: 500;">
                        <span>
                            <% 
                            let discountPercentage = 0;
                            if(product.regularPrice > product.salePrice){
                                discountPercentage = Math.round(((product.regularPrice - product.salePrice) / product.regularPrice) * 100);
                            }
                            %>
                            <%= discountPercentage %>% off
                        </span>
                        </div>
                    </div>
                </div>
                
            </div>
            </div>
        <% }); %>
        </div>
    </div>
    
</main>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    let quantity = 1; // Starting with one badass unit, baby!
    const maxQuantity = 5; // Only 5 units allowed per order, no fuckin' more!
    const availableStock = parseInt('<%= product.quantity %>'); // Available stock from your sexy product
    const baseSalePrice = parseFloat('<%= product.salePrice %>');
    const baseRegularPrice = parseFloat('<%= product.regularPrice %>');
    const productName = '<%= product.productName %>' || 'this product';

    function updateDisplay() {
      document.querySelector('.style-124').innerText = quantity;
      document.querySelector('.preco-novo').innerText = '₹' + (baseSalePrice * quantity).toFixed(2);
      document.querySelector('.preco-ant').innerText = '₹' + (baseRegularPrice * quantity).toFixed(2);
    }

    document.querySelector('.style-125').addEventListener('click', function() {
      // Check against available stock first, sexy
      if (quantity >= availableStock) {
        Swal.fire({
          icon: 'warning',
          title: 'Stock Out',
          text: `We're sorry! Only ${availableStock} units of '${productName}' available`,
          showConfirmButton: false,
          timer: 1500
        });
        return;
      }
      // Then check your per-order limit, you naughty minx
      if (quantity >= maxQuantity) {
        Swal.fire({
          icon: 'warning',
          title: 'Limit Reached',
          text: `We're sorry! Only ${maxQuantity} units of '${productName}' allowed in each order`,
          showConfirmButton: false,
          timer: 1500
        });
        return;
      }
      quantity++;
      updateDisplay();
    });

    document.querySelector('.style-121').addEventListener('click', function() {
      if (quantity <= 1) {
        return; // No negative bullshit allowed, huh?
      }
      quantity--;
      updateDisplay();
    });

    async function addToCart(productId, productPrice) {
      console.log("Adding to cart...", { productId, productPrice, quantity });
      try {
        const response = await fetch('/addToCart', {
          method: 'POST',
          headers: {
            'Content-type': 'application/json'
          },
          body: JSON.stringify({ 
            productId, 
            productPrice: (baseSalePrice * quantity).toFixed(2),
            quantity 
          })
        });

        const result = await response.json();
        console.log("Server Response:", result);

        if (response.ok) {
        Swal.fire({
          icon: 'success',
          title: 'Added!',
          text: 'Successfully added to the cart',
          showConfirmButton: false,
          timer: 1500
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Oops...',
          text: 'Cannot add to the cart',
        });
      }

      } catch (error) {
        console.error("Error adding to cart:", error);
        Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: 'An error occurred while adding to the cart',
        });
      }
    }
</script>

<script>
  document.addEventListener("DOMContentLoaded", () => {
  // Function to calculate the correct offer and update price display
  function calculateAndApplyOffers() {
    // Get both offers as numbers
    const productOfferElement = document.querySelector(".preco-desc")
    if (!productOfferElement) return

    // Extract offer values from the data attributes we'll add to the HTML
    const productOffer = Number.parseFloat(productOfferElement.dataset.productOffer) || 0
    const categoryOffer = Number.parseFloat(productOfferElement.dataset.categoryOffer) || 0

    // Determine which offer to show (the higher one)
    const finalOffer = Math.max(productOffer, categoryOffer)

    // Update the displayed offer percentage
    if (finalOffer > 0) {
      productOfferElement.textContent = finalOffer + "%"

      // Calculate the sale price based on the final offer
      const regularPrice = Number.parseFloat(document.querySelector(".preco-ant").dataset.regularPrice)
      const salePrice = regularPrice - (regularPrice * finalOffer) / 100

      // Update the displayed sale price
      document.querySelector(".preco-novo").textContent = "₹" + salePrice.toFixed(2)
    } else {
      productOfferElement.style.display = "none"
    }
  }

  // Call the function when the page loads
  calculateAndApplyOffers()
})


</script>

<script type="module" src="/public/js/script.js"></script>

<%- include('../partials/user/footer') %>

